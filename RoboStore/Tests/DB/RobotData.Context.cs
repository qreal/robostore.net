//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Core.Objects;
using System.Linq;

namespace Tests.DB
{
  using System;
  using System.Data.Entity;
  using System.Data.Entity.Infrastructure;

  public partial class RDBEntities6 : DbContext
  {
    public RDBEntities6()
      : base("name=RDBEntities6")
    {
    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
      throw new UnintentionalCodeFirstException();
    }

    public virtual DbSet<Configuration> Configurations { get; set; }
    public virtual DbSet<Image> Images { get; set; }
    public virtual DbSet<ProgramRobot> ProgramRobots { get; set; }
    public virtual DbSet<Program> Programs { get; set; }
    public virtual DbSet<RobotCommand> RobotCommands { get; set; }
    public virtual DbSet<Robot> Robots { get; set; }
    public virtual DbSet<User> Users { get; set; }

    public void RefreshModified()
    {
      var ctx = ((IObjectContextAdapter) this).ObjectContext;
      // Get all objects in statemanager with entityKey 
      // (context.Refresh will throw an exception otherwise) 
      var objects = (from entry in ctx.ObjectStateManager.GetObjectStateEntries(
        EntityState.Added
        | EntityState.Deleted
        | EntityState.Modified
        | EntityState.Unchanged)
        where entry.EntityKey != null
        select entry.Entity);
      ctx.Refresh(RefreshMode.StoreWins, objects);
    }
  }
}
